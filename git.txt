### notes on git
Wed Apr 24 19:12:54 PDT 2013
========================================================
/etc/gitconfig
.gitconfig
.git/config

git config -l

What git can do?
- configure and initialize a repository
- begin and stop tracking files
- stage and commit changes
- git ignore
- undo operations
- browser history/log
- view changes between commits
- push/pull from remote repositories

cd my-project
git init

$ git clone git://github.com/schacon/grit.git mygrit
git://
http://
https://
user@server:/path.git

file can be in state
---------------------------------------------
            add                    edit                  stage                commit
untracked  --------  unmodified  -----------  modified  ----------  staged  ------------ unmodified
            remove





========================================================
git config --global user.name "Li Yan"
git config --global user.email "lantimilan@gmail.com"

git config --global core.editor 'emacs'

git config user.name

cat ~/.gitconfig

# initialize a new git repository
cd myproject
git init
git add .
git commit -m 'initial commit'

git log

# clone a git repository
git clone git://github.com/lantimilan/something.git


git add newfile
git commit -am 'my change'

git reset

git status

git diff
git diff --staged

working   ----> staing ----> git repository
directory       area


# branching and merging
git branch

git branch experiment # create a new branch called experiment
git checkout experiment # switched to branch "experiment"
git branch

git checkout master

git push origin experiment # what is origin?

git merge experiment
# if conflict
git add filename
git commit

git branch -d experiment # delete branch "experiment", use -D to force deletion

# git server is called a remote
# When you do a clone of a repository, Git will automatically add a remote
# reference for the repository you cloned, automatically naming it ‘origin’.
# This is an alias, so you don’t have to type the whole URL again when getting
# updates from it. Instead you can just run git fetch origin (instead of git
# fetch git://server/path.git).

git remote # prints origin

git fetch origin # get updates from remote

git push origin master  # push changes to remote

git log -p  # view patches

git log --stat

git log --pretty=raw oneline short medium full fuller email

$ git log --pretty=format:"The author of %h was %an, %ar%nThe title was
>>%s<<%n"

$ git log --pretty=oneline --graph

$ git log --before="2 weeks ago" --after="2009-01-26" --pretty=oneline

$ git log --author=johannes.schindelin --since="14 days ago" --pretty=oneline

$ git log --author='\.mil' --pretty=format:"%ae" | wc -l

$ git log --grep='C90' --pretty=oneline

file history
$ git log --pretty=oneline -- notes.c 

$ git log --pretty=oneline --all -- t/lib-httpd/

$ git log --pretty=oneline -- t/lib-httpd/ notes.c

$ git log --grep='C90' --pretty=oneline --no-merges

$ git log --pretty=oneline --no-merges -5 # max number of commits

[master]$ git log --pretty=oneline 710f0f..8a5cbc

$ git log master..experiment --pretty=oneline

$ git log ..experiment --pretty=oneline

$ git log master.. --pretty=oneline

# show change
$ git show --pretty="format:" --name-only bd61ad98
