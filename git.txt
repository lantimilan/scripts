git config --global user.name "Li Yan"
git config --global user.email "lantimilan@gmail.com"

git config --global core.editor 'emacs'

git config user.name

cat ~/.gitconfig

# initialize a new git repository
cd myproject
git init
git add .
git commit -m 'initial commit'

git log

# clone a git repository
git clone git://github.com/lantimilan/something.git


git add newfile
git commit -am 'my change'

git reset

git status

git diff
git diff --staged

working   ----> staing ----> git repository
directory       area


# branching and merging
git branch

git branch experiment # create a new branch called experiment
git checkout experiment # switched to branch "experiment"
git branch

git checkout master

git push origin experiment # what is origin?

git merge experiment
# if conflict
git add filename
git commit

git branch -d experiment # delete branch "experiment", use -D to force deletion

# git server is called a remote
# When you do a clone of a repository, Git will automatically add a remote
# reference for the repository you cloned, automatically naming it ‘origin’.
# This is an alias, so you don’t have to type the whole URL again when getting
# updates from it. Instead you can just run git fetch origin (instead of git
# fetch git://server/path.git).

git remote # prints origin

git fetch origin # get updates from remote

git push origin master  # push changes to remote

git log
